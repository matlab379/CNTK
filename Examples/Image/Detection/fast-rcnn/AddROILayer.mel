m1 = LoadModel("$curModel$", format="cntk")
SetDefaultModel(m1)

fc3WScale = 0.01
fc3BValue = 0

roiDim = $TrainROIDim$
roiLabelDim = $TrainROILabelDim$
LabelDim = $LabelDim$

# replace the pooling layer
rois = Input(roiDim, tag="feature")
roi = ROIPooling(rois, conv5.y, 6, 6)

# 9216 = 6 * 6 * 256--the size of each ROI.
rshp = Reshape(roi, 9216, imageWidth=6, imageHeight=6, imageChannels=256, imageLayout="CHW")
SetInput(h1.t, 1, rshp)

# replace the labels
roiLabels = Input(roiLabelDim, tag="label")
rshpROI = Reshape(roiLabels, LabelDim, imageWidth=LabelDim, imageHeight=1, imagechannels=1, imageLayout="CHW")
rshpLabels = ReconcileDynamicAxis(rshpROI, rshp)

SetInput(Err, 0, rshpLabels)
SetInput(CE, 0, rshpLabels)
DeleteNode(labels)

# replace the last layer
newL = DnnLastLayer(4096, 21, h2_d, fc3WScale, fc3BValue)
SetInput(CE, 1, newL.z)
SetInput(Err, 1, newL.z)
SetProperty(newL.z, "output", "true")

# remove replaced nodes
DeleteNode(OutputNodes.z) 
DeleteNode(OutputNodes.t)
DeleteNode(OutputNodes.b)
DeleteNode(OutputNodes.W)
DeleteNode(pool3)

Rename(newL.*, OutputNodes.*)

# turn off gradient updates for first conv layer.
SetProperty(pool1, "NeedsGradient", "false")
SetProperty(conv1.W, "NeedsGradient", "false")
SetProperty(conv1.b, "NeedsGradient", "false")
SetProperty(conv1.c, "NeedsGradient", "false")
SetProperty(conv1.z, "NeedsGradient", "false")
SetProperty(conv1.y, "NeedsGradient", "false")

SetProperty(pool1, "learningRateMultiplier", "0")
SetProperty(conv1.W, "learningRateMultiplier", "0")
SetProperty(conv1.b, "learningRateMultiplier", "0")
SetProperty(conv1.c, "learningRateMultiplier", "0")
SetProperty(conv1.z, "learningRateMultiplier", "0")
SetProperty(conv1.y, "learningRateMultiplier", "0")

SaveModel(m1, "$newModel$", format="cntk")