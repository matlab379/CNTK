RootDir = "."
ConfigDir = "$RootDir$"
DataDir = "$ConfigDir$/data/"
OutputDir = "D:"
ModelDir = "D:"

ndlMacros="$ConfigDir$/Macros.ndl"

precision="float"
deviceId="Auto"
parallelTrain="false"
command=FixForTest:Write

#stderr="$OutputDir$/AlexNet"
traceLevel=1
numMBsToShowResult=50

FinalModel = "AlexNet.rcnn.just_resize.allim.pad"

#### dimension variables; used here and in MEL files. ####

# 200 rois per image * 4 points per ROI
TestROIDim = 800
# 200 rois per image * 21 object classes
TestROILabelDim = 4200

# 64 rois per image for training
TrainROIDim = 256
TrainROILabelDim = 1344
LabelDim = 21

#### end dimension variables ####

AddROILayer=[
    action="edit"
    CurModel="$ConfigDir$/AlexNet.89"
    NewModel="$ModelDir$/$FinalModel$.0"
    editPath="$ConfigDir$/AddROILayer.mel"
]

JustLast=[
    action="edit"
    CurModel="$ModelDir$/$FinalModel$"
    NewModel="$ModelDir$/$FinalModel$"
    editPath="$ConfigDir$/JustLast.mel"
]

ChangeInputSize=[
    action="edit"
    NewHeight = 500
    NewWidth = 500
    CurModel="$ModelDir$/$FinalModel$.0"
    NewModel="$ModelDir$/$FinalModel$.0"
    editPath="$ConfigDir$/ChangeInputSize.mel"
]

FixForTest=[
    action="edit"
    CurModel="$ModelDir$/$FinalModel$.0"
    NewModel="$ModelDir$/$FinalModel$.test"
    editPath="$ConfigDir$/FixForTest.mel"
]

Train=[
    action="train"

    modelPath="$ModelDir$/$FinalModel$"
    NDLNetworkBuilder=[
        networkDescription="$ConfigDir$/AlexNet.ndl"
    ]
    
    SGD=[
        epochSize=0
        minibatchSize=2
        learningRatesPerMB=0.001*5:0.0001
        momentumPerMB=0.9
        maxEpochs=15
        gradUpdateType=None
        L2RegWeight=0.0005
        dropoutRate=0.5
        
        ParallelTrain=[
            parallelizationMethod="DataParallelSGD"
            distributedMBReading="true"
            parallelizationStartEpoch=1
            DataParallelSGD=[
                gradientBits=32
            ]
        ]
        
        numMBsToShowResult=50

    ]
    reader=[
        randomize = false
        verbosity = 2
        deserializers = (
        [
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/tv2012pad.rois.txt"
            input = [
                rois = [
                    dim = $TrainROIDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/tv2012pad.roilabels.txt"
            input = [
                roiLabels = [
                    dim = $TrainROILabelDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "ImageDeserializer"
            module = "ImageReader"
            file="$DataDir$/tv2012pad.txt"
            input = [
                features = [
                transforms = (
                    [
                        type = "Pad"
                        width = 500
                        height = 500
                        channels = 3
                        value = 114
                    ]:[
                        type = "Mean"
                        # Stores mean values for each pixel in OpenCV matrix XML format.
                        meanFile = "$ConfigDir$/ImageNet500_mean.xml"
                    ]:[
                        # Changes the image layout from HWC to CHW
                        type = "Transpose"
                    ]
                )
                ]
                ignored=[
                    labelDim=1000
                ]
            ]
        ]
        )
    ]
]

Write=[
    action="write"
    modelPath="$ModelDir$/$FinalModel$.test"
    # Set minibatch size for testing.
    minibatchSize=8
    outputPath="$OutputDir$/justlast_sanity-test200-withcasts"
    reader=[
        randomize = false
        verbosity = 2
        deserializers = (
        [
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/test2007pad_all.rois.txt"
            input = [
                rois = [
                    dim = $TestROIDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "CNTKTextFormatDeserializer"
            module = "CNTKTextFormatReader"
            file = "$DataDir$/test2007pad_all.roilabels.txt"
            input = [
                roiLabels = [
                    dim = $TestROILabelDim$
                    format = "dense"
                ]
            ]
        ]:[
            type = "ImageDeserializer"
            module = "ImageReader"
            file="$DataDir$/test2007pad_all.txt"
            input = [
                features = [
                transforms = (
                [
                        type = "Pad"
                        height = 500
                        width = 500
                        channels = 3
                        value = 114
                    ]:[
                        type = "Mean"
                        # Stores mean values for each pixel in OpenCV matrix XML format.
                        meanFile = "$ConfigDir$/ImageNet500_mean.xml"
                    ]:[
                        # Changes the image layout from HWC to CHW
                        type = "Transpose"
                    ]
                )
                ]
                ignored=[
                    labelDim=1000
                ]
            ]
        ]
        )
    ]

    #outputNodeNames = (features)
]
